// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/K-Kizuku/ito-denwa/internal/application/service"
	"github.com/K-Kizuku/ito-denwa/internal/application/usecase"
	"github.com/K-Kizuku/ito-denwa/internal/config"
	"github.com/K-Kizuku/ito-denwa/internal/infrastructure/repository"
	"github.com/K-Kizuku/ito-denwa/internal/presentation/http"
	"github.com/K-Kizuku/ito-denwa/internal/presentation/http/handler"
	"github.com/K-Kizuku/ito-denwa/pkg/jwt"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitRouter(e *gin.Engine, cfg *config.Config) *http.Router {
	iHealthzRepository := repository.NewHealthzRepository()
	iHealthzUsecase := usecase.NewHealthzUsecase(iHealthzRepository)
	iHealthzHandler := handler.NewHealthzHandler(iHealthzUsecase)
	iRoomRepository := repository.NewRoomRepository()
	iItodenwaUsecase := usecase.NewItodenwaUsecase(iRoomRepository)
	iWebSocketHandler := handler.NewWebSocketHandler(iItodenwaUsecase)
	cardService := service.NewCardService()
	stringItemService := service.NewStringItemService()
	jwtJWT := jwt.NewJWT()
	userService := service.NewUserService(jwtJWT)
	router := http.NewRouter(iHealthzHandler, iWebSocketHandler, cardService, stringItemService, userService)
	return router
}
